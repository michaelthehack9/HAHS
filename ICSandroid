#!/data/data/com.termux/files/usr/bin/sh

# ===== Configuration =====

if [ -f key.txt ]; then
  SNIPEIT_API_KEY=$(cat key.txt)
else
  echo "❌ Error: key.txt not found. Please create it with your API key."
  exit 1
fi

if [ -z "$SNIPEIT_API_KEY" ]; then
  echo "❌ Error: key.txt is empty. Please add your API key."
  exit 1
fi

SNIPEIT_BASE_URL='http://ics.hasdhawks.org'
AUTH_HEADER="Authorization: Bearer $SNIPEIT_API_KEY"
ACCEPT_HEADER="Accept: application/json"
CONTENT_HEADER="Content-Type: application/json"

TMP_DIR="$PREFIX/tmp"
mkdir -p "$TMP_DIR"

# ===== Functions =====

# [Functions are unchanged from your version and work perfectly in Termux.]

# Paste your get_asset_info, do_checkin, do_checkout, do_audit, show_assigned here
# They are already Termux-compatible (you’re using curl, jq, etc.)

# For file paths, replace /tmp/ with $TMP_DIR to ensure compatibility:
# Example:
#   TMP_MATCHES="/tmp/matches_assets.txt" --> TMP_MATCHES="$TMP_DIR/matches_assets.txt"

# ===== Main Menu =====

echo "Choose actions (comma separated): audit, checkin, checkout, assigned"
read -p "> " CHOICES
CHOICES=$(echo "$CHOICES" | tr '[:upper:]' '[:lower:]')

while true; do
  echo -n "Enter Asset Tag (or 's<search>'): "
  read INPUT
  get_asset_info "$INPUT" || exit 1

  RUN_ORDER=""
  case "$CHOICES" in
    *assigned*) RUN_ORDER="$RUN_ORDER assigned" ;;
  esac
  case "$CHOICES" in
    *checkout*) RUN_ORDER="$RUN_ORDER checkin checkout" ;;
    *checkin*)  RUN_ORDER="$RUN_ORDER checkin" ;;
  esac
  case "$CHOICES" in
    *audit*)    RUN_ORDER="$RUN_ORDER audit" ;;
  esac

  for action in $RUN_ORDER; do
    case "$action" in
      checkin)  do_checkin ;;
      checkout) do_checkout ;;
      assigned) show_assigned ;;
      audit)    do_audit ;;
    esac
  done
done
